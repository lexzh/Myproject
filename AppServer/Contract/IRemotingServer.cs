namespace Contract
{
    using ParamLibrary.Application;
    using ParamLibrary.Bussiness;
    using ParamLibrary.CarEntity;
    using ParamLibrary.CmdParamInfo;
    using ParamLibrary.Entity;
    using System;
    using System.Collections;
    using System.Data;
    using System.Runtime.InteropServices;
    using System.Collections.Generic;

    public interface IRemotingServer
    {
        int Alarm_DelPath(int iPathId, string sPathName);
        bool Alarm_DelPathCheckAuth(int iPathId, string sPathName);
        int Alarm_DelRegion(string sPathName);
        bool Alarm_DelRegionCheckAuth(string sRegioinName);
        DataTable Alarm_GetGroupType();
        DataTable Alarm_GetPathInfo();
        DataTable Alarm_GetPathSegmentInfo();
        DataTable Alarm_GetRegionInfo();
        int Alarm_InsertPathRelatedType(int pathGroupId, int pathId);
        int Alarm_InsertRelatedType(string[] pathGroupIdLst, int pathId);
        int Alarm_InsertRelatedType(int pathGroupId, int regionId);
        DataTable Alarm_PreSetPath(string pathStr, string pathName, int pathType, int region_Radius, string factoryName, double lon_Factory, double lat_Factory, string buildingSitName, double lon_BuildingSit, double lat_BuildingSit);
        DataTable Alarm_PreSetPathEx(string pathStr, string pathName, int pathType, int region_Radius, string factoryName, double lon_Factory, double lat_Factory, string buildingSitName, double lon_BuildingSit, double lat_BuildingSit, string remark, string[][] PathSegments);
        DataTable Alarm_PreSetRegion(string regionStr, string regionName, int iRegionFeature);
        DataTable Alarm_ShowGroupType();
        Response Alarm_UdateRegionDot(string regionId, string regionDot);
        Response Alarm_UdateRegionDot(string regionId, string regionDot, string RegionName, int pathgroupID);
        DataSet Area_getAllTreeInfo();
        byte[] Area_getAllTreeInfoComPress();
        DataTable Area_getAreaInfoAll();
        byte[] Area_getAreaInfoAllByCompress();
        byte[] Area_getAreaInfoAllExByCompress();
        DataTable Area_GetUserAreaInfo();
        Response Car_CommandParameterInsterToDB(CmdParam.ParamType ParamType, string CarValues, string CarPw, SimpleCmd cmdParameter, string cmdContent, string desc);
        int Car_DeletePathAlarm(string strCarId);
        DataTable Car_GetAlarmPathDotFromGisCar(string strCarId);
        DataTable Car_GetCaptureMoniterDataByCarId(string strCarId);
        DataTable Car_GetCarAlarmRegionInfo(string strCarId);
        DataTable Car_GetCarAlarmState(string strCarId);
        DataTable Car_GetCarConfig(string sCarId);
        CommonCar Car_GetCarDetailInfoByCarId(string CarId);
        DataTable Car_GetCarImgInfo(string strPhone, string strGpsTime, string strCaremaId);
        DataTable Car_GetCarImgInfo(string strPhone, string strGpsTime, string strCaremaId, string strReceTime);
        DataTable Car_GetCarList(int iPage, int iRecsPerPage);
        byte[] Car_GetCarListByCompress(int iPage, int iRecsPerPage);
        DataTable Car_GetCarListEx(int iPage, int iRecsPerPage);
        byte[] Car_GetCarListExByCompress(int iPage, int iRecsPerPage);
        DataTable Car_GetCarMutilVideoInfo(string strPhone, string strGpsTime, string strCaremaId, string picDataType);
        DataTable Car_GetCarMutilVideoInfo(string strPhone, string strGpsTime, string strCaremaId, string picDataType, string strReceTime);
        DataTable Car_GetDevice(string sCarId);
        DataTable Car_GetDeviceShareRef();
        DataTable Car_GetImportWatchCarInfo();
        DataTable Car_GetInterestPointMulti(string strMapType, int iPoiAutn);
        DataTable Car_GetInterestPointSingle(string strMapType, int iPoiAutn);
        DataTable Car_GetMapType();
        DataTable Car_GetNewPathId(string strCarId, string strPathName, int iMaxPathId);
        DataTable Car_GetNewRegionId(string strCarId, string strRegionName, int iMaxRegionId);
        DataTable Car_GetPassWayPathID(string strCarId);
        DataTable Car_GetPathAlarm(string strCarId);
        DataTable Car_GetPathAlarmAnother(string strCarId);
        DataTable Car_GetPathRouteByPathName(string strPathNames);
        DataTable Car_GetPathSegmentAlarm(string strCarId);
        DataTable Car_GetPhonesByType(CmdParam.PhoneType phoneType, string sCarID);
        DataTable Car_GetPOIAuth();
        DataTable Car_GetRefRegion(double Xmin, double Ymin, double Xmax, double Ymax);
        DataTable Car_GetRegionInfo(string strCarId, int iRegionFeature);
        int Car_SaveFormCmdParam(string sCarParamInfo, string sMsgType, string sCmdContent);
        int Car_SaveFormSetParam(string sCarParamInfo, string sMsgType, string sParam);
        Response Car_SetCarPicTimeParam(string sSimNum, CaptureEx m_CaptureEx, string sPicTime);
        Response Car_SmallArea(string sLongtide, string sLatitude, string sDis, TxtMsg MsgContext);
        Response Car_SmallArea_FJYD(string sLeftLon, string sLeftLat, string sRightLon, string sRightLat, string sResWay, string stelNumber, TxtMsg MsgContext, CmdParam.CommMode CommMode);
        int Car_UpdateImportWatch(string sPhone, int iFlag);
        DataTable CarDataInfoBuffer_GetArarmCarList();
        byte[] CarDataInfoBuffer_GetArarmCarListByCompress();
        int CarFilter_SetCheckedCar(string AreaCodeOrCarId, bool isRegion, bool isAdd);
        DataTable CarOil_GetOilAnalogValue(string sCarId);
        DataTable CarOil_GetOilBoxInfo(string sCarId);
        int CarOil_GetOilBoxVol(string sCarId);
        DataTable DownData_GetCarInfoByArea_By_Circle(string longtide, string latitude, string radius);
        DataTable DownData_GetCarInfoByArea_By_Rectangle(string leftLon, string leftLat, string rightLon, string rightLat);
        AppRespone DownData_icar_SendRawPackage(AppRequest pRequest, object pvArg);
        AppRespone DownData_icar_SetCommonCmd_Pass(AppRequest pAppRequest);
        Response DownData_icar_SetCommonCmd_XCJLY(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, SimpleCmd simpleCmd);
        Response DownData_icar_SmallArea_FJYD(string leftLon, string leftLat, string rightLon, string rightLat, string tryWay, string stelNumber, ArrayList sendCarlist, TxtMsg MsgContext, CmdParam.CommMode commMode);
        Response DownData_RemoteDial(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, RemoteDial remoteDial);
        Response DownData_RemoteUpdate(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode);
        Response DownData_SelMultiPathAlarm(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, PathAlarmList pathAlarmList);
        Response DownData_SelMultiPathAlarm_FJYD(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, PathAlarmList pathAlarmList);
        Response DownData_SendRawPackage(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, SimpleCmd simpleCmd);
        Response DownData_SendTxtMsg(CmdParam.ParamType ParamType, string sCarValue, string sPw, CmdParam.CommMode CommMode, TxtMsg TxtMsg);
        Response DownData_SetAlarmFlag(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, AlarmEntity arlamArgs);
        Response DownData_SetBlackBox(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, BlackBox blackbox);
        Response DownData_SetCallLimit(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, CallLimit callLimit);
        Response DownData_SetCaptureEx(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, CaptureEx captureEx);
        Response DownData_SetCommArg(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, CommArgs commArgs);
        Response DownData_SetCommonCmd_FJYD(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, SimpleCmd simpleCmd);
        Response DownData_SetCustomAlarmer(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, AlarmEntity alarmEntity);
        Response DownData_SetLastDotQuery(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, CmdParam.OrderCode ordercode);
        Response DownData_SetMinSMSReportInterval(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, MinSMSReportInterval minSmsReport);
        Response DownData_SetMultiSegSpeedAlarm(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, PathAlarmList pathAlarmList);
        Response DownData_SetPhone(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, SetPhone setPhone);
        Response DownData_SetPosReport(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, PosReport posReport);
        Response DownData_SetRegionAlarm(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, RegionAlarmList regionAlarmList);
        Response DownData_SetRegionAlarm_FJYD(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, RegionAlarmList regionAlarmList);
        Response DownData_SetSpeedAlarm(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, SpeedAlarm speedAlarm);
        Response DownData_SetTransportReport(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, TransportReport transport);
        Response DownData_SimpleCmd(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, SimpleCmd simpleCmd);
        Response DownData_SimpleCmdEx(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, SimpleCmdEx simpleCmdEx);
        Response DownData_StopCapture(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, StopCapture stopCapture);
        Response ExecNoQuery(string sql);
        Response ExecParamNoQuery(string sql, List<SqlParam> list);
        byte[] ExecParamSqlByCompress(string sql, List<SqlParam> list);
        DataTable ExecSql(string sql);
        byte[] ExecSqlByCompress(string sql);
        int FloatCarFilterToGpsCarFilter(int workid, string companycode);
        string GetBufferSize();
        DataTable GetCommonData(string sCarId, int queryType, string[] queryCondition);
        string GetCorpName();
        string GetCustomInfo();
        string GetDBCurrentDateTime();
        int getE(string sComputerId, string sDogSg, string sSystemId, string sIp, ref string sErrMsg, ref string sEmpowerCd);
        DataTable GetFloatCarFilterByCompany(string companycode);
        DataTable GetLatestThreeMinCar(string companycode);
        int getLocation(GetLocationParam getLocationParam, out ResponseLocationParam responseLocationParam);
        string GetParamData(string carid, int OrderCoder);
        DataTable GetPathAlarmChecked(string strCarId);
        DataTable GetPhoneNumTextByCarid(string carid);
        DataTable GetPrePathLongAndLat(string GetPrePathLongAndLat, string BeginTime, string EndTime);
        string GetTitleName();
        Response icar_SendRawPackage(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, TrafficRawPackage trafficRawPackage);
        Response icar_SetCommonCmdTraffic(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, TrafficSimpleCmd trafficSimpleCmd);
        Response icar_SetPhoneNumText(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, TrafficPhoneNumText trafficPhoneNumText);
        Response icar_SetPlatformAlarmCmd(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, TrafficSimpleCmd trafficSimpleCmd);
        Response icar_SetPosReportConditions(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, TrafficPosReport trafficPosReport);
        Response icar_SetTextMsg(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, TxtMsg trafficTextMsg);
        bool IsAvtive();
        bool LoginSys_CheckUser(string UserId, string Pass);
        DataTable LoginSys_GetAllMenu();
        int MapFlag_AddFlagMap(float lon, float lat, string name, string areaCode, int flagTypeCode);
        bool MapFlag_DeleteFlagMap(string name);
        DataTable MapFlag_FlagMapType();
        DataTable MapFlag_showFlagMap();
        Response SaveIOStatusName(string sCarId, string IOStatusName);
        int SendAuthorityFromClient(string oldMachineCode, string newMachineCode, string clientIp, string systemId, string sVersion, out string errorMessage, out string authorityCode);
        Response SetParam(string sOrderCode, string sParams1, string sParams2);
        Response StopAlarmDeal(CmdParam.ParamType ParamType, string CarValues, string CarPw, CmdParam.CommMode CommMode, TrafficALarmHandle alarmHandle, object objOrder);
        DataTable TrackReplay_GetReplayData(string BeginTime, string EndTime, string Tele, int RecordCount, int PageNum, int PageCount, int IsComputeMile);
        DataTable TrackReplay_GetReplayData(string BeginTime, string EndTime, string Tele, int RecordCount, int PageNum, int PageCount, int IsComputeMile, int IsQueryPic);
        DataTable TrackReplay_GetReplayData(string BeginTime, string EndTime, string strSimNum, int RecordCount, int PageNum, int PageCount, int IsComputeMile, string strHand, string strDistance);
        byte[] TrackReplay_GetReplayDataByCompress(string BeginTime, string EndTime, string Tele, int RecordCount, int PageNum, int PageCount, int IsComputeMile);
        byte[] TrackReplay_GetReplayDataByCompress(string BeginTime, string EndTime, string Tele, int RecordCount, int PageNum, int PageCount, int IsComputeMile, int IsQueryPic);
        DataTable TrackReplay_GetReplayDataCount(string BeginTime, string EndTime, string SimNum);
        DataTable TrackReplay_GetReplayPicData(string BeginTime, string EndTime, string Tele);
        byte[] TrackReplay_GetReplayPicDataByCompress(string BeginTime, string EndTime, string Tele);
        byte[] TrackReplay_GetReplayPicDataByGpsRece(string GpsTime, string ReceTime, string Tele);
        DataTable Updata_GetCarAlarmLog();
        byte[] Updata_GetCarAlarmLogBSByCompress();
        byte[] Updata_GetCarAlarmLogByCompress();
        DataTable Updata_GetCarCurrentPos();
        byte[] Updata_GetCarCurrentPosBsCompress();
        byte[] Updata_GetCarCurrentPosByCompress();
        byte[] Updata_GetCarCurrentPosNotSelBSByCompress();
        byte[] Updata_GetCarCurrentPosNotSelByCompress();
        DataTable Updata_GetCarNewLog();
        byte[] Updata_GetCarNewLogBSByCompress();
        byte[] Updata_GetCarNewLogByCompress();
        DataTable Updata_GetCarPic();
        byte[] Updata_GetCarPicBSByCompress();
        byte[] Updata_GetCarPicByCompress();
        DataTable Updata_GetCarReachDateData();
        int UpdateFloatCarFilter(string companycode, int workid);
        int UpdatePathEx(TrafficPath traffic);
        string User_ChangePassword(string sUser, string sOldPassword, string sNewPassword);
    }
}

